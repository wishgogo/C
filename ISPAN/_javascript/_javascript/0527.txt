事件驅動evevt-driven

number to string(數字轉字串) toFIxed(digits)小數點會進位 
參數是小數點幾位,沒給參數預設值為0 

//後遞增
1.先取運算式之值(=目前的變數值)
2.變數再遞增
var n1 = 100;
console.log(n1++); //100
console.log(n1); //101

//先遞增
1.變數遞增1
2.再取運算式之值(=目前的變數值)
var n1 = 100;
console.log(++n1); //101
console.log(n1); //101

V1++ -100 一元運算子(正,負,++,--,typeof,!)
100+200 二元運算子

var var1=100;
console.log("var1", typeof var1 + "abc"); //typeof var1 ==>numberabc
console.log("var1", typeof var1); //var1 number
console.log("var1", typeof (var1 + "abc")); //typeof var1 ==>string
console.log("var1", typeof var1); //var1 number

===相等 x==5 is true  x=='5' is true  
===完全相等 x===5 is true  x==='5' is false

var v1=100;
var v2=123.45;
console.log(v1>v2 && v1++ != 100); //false

//&& short-circuit evaluation 短路運算(因為前面為false 後面就不執行)
console.log(v1>v2 && ((v1++) != 100)); //false
console.log(`v1=${v1}`); //v1=100

條件式=布林運算式
if(Condition) true or false
{
}

toUpperCase()轉大寫

if(0) 0 、 null 、 undefined、 NaN(Not a number)視為false 
{
}

// 註解(mark out)

